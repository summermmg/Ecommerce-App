{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  product: [],\n  status: 'idle',\n  error: null\n};\nexport const fetchProduct = createAsyncThunk('product/fetchProduct', async id => {\n  const response = await axios.get(`/api/products/${id}`);\n  const data = response.data;\n  return data;\n});\nexport const likeProduct = createAsyncThunk('product/likeProduct', async productIdObj => {\n  const response = await axios.put('/api/products', productIdObj);\n});\nconst productSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {\n    productLiked: {\n      reducer(state, action) {\n        state.product[0].like++;\n        return state;\n      }\n\n    }\n  },\n  extraReducers: {\n    [fetchProduct.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchProduct.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.product = action.payload;\n    },\n    [fetchProduct.failed]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.error;\n    }\n  }\n});\nexport const {\n  productLiked\n} = productSlice.actions;\nexport default productSlice.reducer;","map":{"version":3,"sources":["W:/tzou/ecommerce-app/frontend/src/features/product/productSlice.js"],"names":["createSlice","createAsyncThunk","axios","initialState","product","status","error","fetchProduct","id","response","get","data","likeProduct","productIdObj","put","productSlice","name","reducers","productLiked","reducer","state","action","like","extraReducers","pending","fulfilled","payload","failed","actions"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,gBAArB,QAA4C,kBAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,MAAM,EAAE,MAFS;AAGjBC,EAAAA,KAAK,EAAC;AAHW,CAArB;AAMA,OAAO,MAAMC,YAAY,GAAGN,gBAAgB,CAAC,sBAAD,EAAyB,MAAOO,EAAP,IAAc;AAC/E,QAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,iBAAgBF,EAAG,EAA9B,CAAvB;AACA,QAAMG,IAAI,GAAGF,QAAQ,CAACE,IAAtB;AACA,SAAOA,IAAP;AACH,CAJ2C,CAArC;AAMP,OAAO,MAAMC,WAAW,GAAGX,gBAAgB,CAAC,qBAAD,EAAwB,MAAOY,YAAP,IAAwB;AACvF,QAAMJ,QAAQ,GAAG,MAAMP,KAAK,CAACY,GAAN,CAAU,eAAV,EAA0BD,YAA1B,CAAvB;AACH,CAF0C,CAApC;AAIP,MAAME,YAAY,GAAGf,WAAW,CAAC;AAC7BgB,EAAAA,IAAI,EAAE,SADuB;AAE7Bb,EAAAA,YAF6B;AAG7Bc,EAAAA,QAAQ,EAAE;AACNC,IAAAA,YAAY,EAAC;AACTC,MAAAA,OAAO,CAACC,KAAD,EAAOC,MAAP,EAAe;AACND,QAAAA,KAAK,CAAChB,OAAN,CAAc,CAAd,EAAiBkB,IAAjB;AACJ,eAAOF,KAAP;AACH;;AAJA;AADP,GAHmB;AAY7BG,EAAAA,aAAa,EAAE;AACX,KAAChB,YAAY,CAACiB,OAAd,GAAwB,CAACJ,KAAD,EAAOC,MAAP,KAAkB;AACtCD,MAAAA,KAAK,CAACf,MAAN,GAAe,SAAf;AACH,KAHU;AAIX,KAACE,YAAY,CAACkB,SAAd,GAA0B,CAACL,KAAD,EAAOC,MAAP,KAAkB;AACxCD,MAAAA,KAAK,CAACf,MAAN,GAAe,WAAf;AACAe,MAAAA,KAAK,CAAChB,OAAN,GAAgBiB,MAAM,CAACK,OAAvB;AACH,KAPU;AAQX,KAACnB,YAAY,CAACoB,MAAd,GAAwB,CAACP,KAAD,EAAOC,MAAP,KAAkB;AACtCD,MAAAA,KAAK,CAACf,MAAN,GAAe,QAAf;AACAe,MAAAA,KAAK,CAACd,KAAN,GAAce,MAAM,CAACf,KAArB;AACH;AAXU;AAZc,CAAD,CAAhC;AA2BA,OAAO,MAAM;AAACY,EAAAA;AAAD,IAAiBH,YAAY,CAACa,OAApC;AACP,eAAeb,YAAY,CAACI,OAA5B","sourcesContent":["import {createSlice, createAsyncThunk} from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nconst initialState = {\r\n    product: [],\r\n    status: 'idle',\r\n    error:null,\r\n}\r\n\r\nexport const fetchProduct = createAsyncThunk('product/fetchProduct', async (id) => {\r\n    const response = await axios.get(`/api/products/${id}`)\r\n    const data = response.data\r\n    return data\r\n})\r\n\r\nexport const likeProduct = createAsyncThunk('product/likeProduct', async (productIdObj) => {\r\n    const response = await axios.put('/api/products',productIdObj)\r\n})\r\n\r\nconst productSlice = createSlice({\r\n    name: 'product',\r\n    initialState,\r\n    reducers: {\r\n        productLiked:{\r\n            reducer(state,action) {\r\n                            state.product[0].like++\r\n                        return state\r\n                    }\r\n\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [fetchProduct.pending]: (state,action) => {\r\n            state.status = 'loading'\r\n        },\r\n        [fetchProduct.fulfilled]: (state,action) => {\r\n            state.status = 'succeeded'\r\n            state.product = action.payload\r\n        },\r\n        [fetchProduct.failed] : (state,action) => {\r\n            state.status = 'failed'\r\n            state.error = action.error\r\n        }\r\n    } \r\n})\r\n\r\nexport const {productLiked} = productSlice.actions\r\nexport default productSlice.reducer"]},"metadata":{},"sourceType":"module"}