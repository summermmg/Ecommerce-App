{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  products: [],\n  status: 'idle',\n  error: null\n}; //fetchProducts is a thunk that can dispatch pending, fulfilled or rejected action type.\n//createAsyncThunk accepts three parameters: a string action type value, a payloadCreator \n//callback, and an options object.\n\nexport const fetchProducts = createAsyncThunk('products/fetchProducts', async () => {\n  const response = await axios.get('/api/products');\n  const data = response.data;\n  return data;\n});\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchProducts.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchProducts.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.products = state.products.concat(action.payload);\n    },\n    [fetchProducts.failed]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.error;\n    }\n  }\n});\nexport default productsSlice.reducer;","map":{"version":3,"sources":["W:/tzou/ecommerce-app/frontend/src/features/products/productsSlice.js"],"names":["createSlice","createAsyncThunk","axios","initialState","products","status","error","fetchProducts","response","get","data","productsSlice","name","reducers","extraReducers","pending","state","action","fulfilled","concat","payload","failed","reducer"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,gBAArB,QAA4C,kBAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,MAAM,EAAE,MAFS;AAGjBC,EAAAA,KAAK,EAAC;AAHW,CAArB,C,CAMA;AACA;AACA;;AACA,OAAO,MAAMC,aAAa,GAAGN,gBAAgB,CAAC,wBAAD,EAA2B,YAAY;AAChF,QAAMO,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,eAAV,CAAvB;AACA,QAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAtB;AACA,SAAOA,IAAP;AACH,CAJ4C,CAAtC;AAMP,MAAMC,aAAa,GAAGX,WAAW,CAAC;AAC9BY,EAAAA,IAAI,EAAE,UADwB;AAE9BT,EAAAA,YAF8B;AAG9BU,EAAAA,QAAQ,EAAE,EAHoB;AAM9BC,EAAAA,aAAa,EAAE;AACX,KAACP,aAAa,CAACQ,OAAf,GAAyB,CAACC,KAAD,EAAOC,MAAP,KAAkB;AACvCD,MAAAA,KAAK,CAACX,MAAN,GAAe,SAAf;AACH,KAHU;AAIX,KAACE,aAAa,CAACW,SAAf,GAA2B,CAACF,KAAD,EAAOC,MAAP,KAAkB;AACzCD,MAAAA,KAAK,CAACX,MAAN,GAAe,WAAf;AACAW,MAAAA,KAAK,CAACZ,QAAN,GAAiBY,KAAK,CAACZ,QAAN,CAAee,MAAf,CAAsBF,MAAM,CAACG,OAA7B,CAAjB;AACH,KAPU;AAQX,KAACb,aAAa,CAACc,MAAf,GAAyB,CAACL,KAAD,EAAOC,MAAP,KAAkB;AACvCD,MAAAA,KAAK,CAACX,MAAN,GAAe,QAAf;AACAW,MAAAA,KAAK,CAACV,KAAN,GAAcW,MAAM,CAACX,KAArB;AACH;AAXU;AANe,CAAD,CAAjC;AAqBA,eAAeK,aAAa,CAACW,OAA7B","sourcesContent":["import {createSlice, createAsyncThunk} from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nconst initialState = {\r\n    products: [],\r\n    status: 'idle',\r\n    error:null,\r\n}\r\n\r\n//fetchProducts is a thunk that can dispatch pending, fulfilled or rejected action type.\r\n//createAsyncThunk accepts three parameters: a string action type value, a payloadCreator \r\n//callback, and an options object.\r\nexport const fetchProducts = createAsyncThunk('products/fetchProducts', async () => {\r\n    const response = await axios.get('/api/products')\r\n    const data = response.data\r\n    return data\r\n})\r\n\r\nconst productsSlice = createSlice({\r\n    name: 'products',\r\n    initialState,\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers: {\r\n        [fetchProducts.pending]: (state,action) => {\r\n            state.status = 'loading'\r\n        },\r\n        [fetchProducts.fulfilled]: (state,action) => {\r\n            state.status = 'succeeded'\r\n            state.products = state.products.concat(action.payload)\r\n        },\r\n        [fetchProducts.failed] : (state,action) => {\r\n            state.status = 'failed'\r\n            state.error = action.error\r\n        }\r\n    } \r\n})\r\n\r\nexport default productsSlice.reducer"]},"metadata":{},"sourceType":"module"}